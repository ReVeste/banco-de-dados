
-- Verifica e exclui as tabelas caso já existam, para evitar conflitos
IF OBJECT_ID('dbo.Imagem', 'U') IS NOT NULL DROP TABLE dbo.Imagem;
IF OBJECT_ID('dbo.Feedback', 'U') IS NOT NULL DROP TABLE dbo.Feedback;
IF OBJECT_ID('dbo.itemPedido', 'U') IS NOT NULL DROP TABLE dbo.itemPedido;
IF OBJECT_ID('dbo.Pedido', 'U') IS NOT NULL DROP TABLE dbo.Pedido;
IF OBJECT_ID('dbo.Entrega', 'U') IS NOT NULL DROP TABLE dbo.Entrega;
IF OBJECT_ID('dbo.Produto', 'U') IS NOT NULL DROP TABLE dbo.Produto;
IF OBJECT_ID('dbo.Endereco', 'U') IS NOT NULL DROP TABLE dbo.Endereco;
IF OBJECT_ID('dbo.Usuario', 'U') IS NOT NULL DROP TABLE dbo.Usuario;
GO

-- Criação da tabela Usuario
IF OBJECT_ID('dbo.Usuario', 'U') IS NULL
BEGIN
		CREATE TABLE dbo.usuario (
		id INT IDENTITY(1,1) PRIMARY KEY,  -- Coluna id com auto incremento
		nome NVARCHAR(255) NOT NULL,        -- Nome do usuário
		cpf CHAR(11) NOT NULL,              -- CPF do usuário
		telefone CHAR(11) NOT NULL,         -- Telefone do usuário
		email NVARCHAR(255) NOT NULL,       -- Email do usuário
		senha NVARCHAR(255) NOT NULL,       -- Senha do usuário
		tipo NVARCHAR(45),         -- Tipo de usuário (usando enum como string)
		ativo BIT,                          -- Status ativo ou inativo
        data_cadastro DATE ,
		imagem_url NVARCHAR(255)            -- URL da imagem do usuário
	);
END
GO

ALTER TABLE dbo.usuario
ADD CONSTRAINT chk_tipo CHECK (tipo IN ('cliente', 'admin', 'funcionario', 'tecnico'));
GO

-- Criação da tabela Endereco
IF OBJECT_ID('dbo.Endereco', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Endereco (
        id INT IDENTITY(1,1) PRIMARY KEY,
        apelido VARCHAR(100) NOT NULL,
        cep CHAR(8) NOT NULL,
        rua VARCHAR(100) NOT NULL,
        numero VARCHAR(10) NOT NULL,
        complemento VARCHAR(100),
        bairro VARCHAR(100) NOT NULL,
        cidade VARCHAR(100) NOT NULL,
        uf CHAR(2) NOT NULL,
        usuario INT NOT NULL,
        FOREIGN KEY (usuario) REFERENCES dbo.Usuario (id)
    );
END
GO

-- Criação da tabela Produto
IF OBJECT_ID('dbo.Produto', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Produto (
        id INT IDENTITY(1,1) PRIMARY KEY,
        nome VARCHAR(100) NOT NULL,
        tamanho VARCHAR(4) NOT NULL,
        categoria VARCHAR(45) NOT NULL,
        marca VARCHAR(45) NOT NULL,
        preco DECIMAL(18, 2) NOT NULL,
        descricao NVARCHAR(1500) NOT NULL,
        qtd_estoque INT NOT NULL,
        data_cadastro DATE,
        data_venda DATE,
        status VARCHAR(10) NOT NULL
            CHECK (status IN ('RESERVADO', 'DISPONIVEL', 'VENDIDO')),
    );
END
GO

-- Criação da tabela Entrega
IF OBJECT_ID('dbo.Entrega', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Entrega (
        id INT IDENTITY(1,1) PRIMARY KEY,
        previsto_para DATE NOT NULL,
        status VARCHAR(45) NOT NULL,
        codigo_rastreio VARCHAR(45) NOT NULL,
        data_hora_envio TIMESTAMP NOT NULL,
        endereco INT NOT NULL,
        FOREIGN KEY (endereco) REFERENCES dbo.Endereco (id)
    );
END
GO

-- Criação da tabela Pedido
IF OBJECT_ID('dbo.Pedido', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Pedido (
        id INT IDENTITY(1,1) PRIMARY KEY,
        data_hora timestamp NOT NULL,
        data_pagamento DATE NOT NULL,
        data_conclusao DATE NOT NULL,
        tipo_frete VARCHAR(45) NOT NULL,
        valor_frete DECIMAL(18, 2) NOT NULL,
        valor_total DECIMAL(18, 2) NOT NULL,
        status VARCHAR(45) NOT NULL,
        usuario INT NOT NULL,
        FOREIGN KEY (usuario) REFERENCES dbo.Usuario (id)
    );
END
GO

-- Criação da tabela itemPedido
IF OBJECT_ID('dbo.itemPedido', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.itemPedido  (
        id INT IDENTITY(1,1),
        pedido INT NOT NULL,
        produto INT NOT NULL,
        quantidade INT NOT NULL,
        PRIMARY KEY (id, pedido, produto),
        FOREIGN KEY (pedido) REFERENCES dbo.Pedido (id),
        FOREIGN KEY (produto) REFERENCES dbo.Produto (id)
    );
END
GO

-- Criação da tabela Feedback
IF OBJECT_ID('dbo.Feedback', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Feedback (
        id INT IDENTITY(1,1) PRIMARY KEY,
        nota INT NOT NULL,
        comentario VARCHAR(255),
        usuario INT NOT NULL,
        FOREIGN KEY (usuario) REFERENCES dbo.Usuario (id)
    );
END
GO

-- Criação da tabela Imagem
IF OBJECT_ID('dbo.Imagem', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Imagem (
        id INT IDENTITY(1,1),
        imagem_url VARCHAR(500) NOT NULL,
        produto_id INT NOT NULL,
        PRIMARY KEY (id, produto_id),
        FOREIGN KEY (produto_id) REFERENCES dbo.Produto (id)
    );
END
GO