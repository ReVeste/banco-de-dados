
-- Verifica e exclui as tabelas caso já existam, para evitar conflitos
IF OBJECT_ID('dbo.Imagem', 'U') IS NOT NULL DROP TABLE dbo.Imagem;
IF OBJECT_ID('dbo.Feedback', 'U') IS NOT NULL DROP TABLE dbo.Feedback;
IF OBJECT_ID('dbo.itemPedido', 'U') IS NOT NULL DROP TABLE dbo.itemPedido;
IF OBJECT_ID('dbo.Pedido', 'U') IS NOT NULL DROP TABLE dbo.Pedido;
IF OBJECT_ID('dbo.Entrega', 'U') IS NOT NULL DROP TABLE dbo.Entrega;
IF OBJECT_ID('dbo.Produto', 'U') IS NOT NULL DROP TABLE dbo.Produto;
IF OBJECT_ID('dbo.Endereco', 'U') IS NOT NULL DROP TABLE dbo.Endereco;
IF OBJECT_ID('dbo.Usuario', 'U') IS NOT NULL DROP TABLE dbo.Usuario;
GO

-- Criação da tabela Usuario
IF OBJECT_ID('dbo.Usuario', 'U') IS NULL
BEGIN
		CREATE TABLE dbo.usuario (
		id INT IDENTITY(1,1) PRIMARY KEY,  -- Coluna id com auto incremento
		nome NVARCHAR(255) NOT NULL,        -- Nome do usuário
		cpf CHAR(11) NOT NULL,              -- CPF do usuário
		telefone CHAR(11) NOT NULL,         -- Telefone do usuário
		data_nascimento DATE,      -- Data de nascimento (campo LocalDate)
		email NVARCHAR(255) NOT NULL,       -- Email do usuário
		senha NVARCHAR(255) NOT NULL,       -- Senha do usuário
		tipo NVARCHAR(45),         -- Tipo de usuário (usando enum como string)
		ativo BIT,                          -- Status ativo ou inativo
		imagem_url NVARCHAR(255)            -- URL da imagem do usuário
	);
END
GO

ALTER TABLE dbo.usuario
ADD CONSTRAINT chk_tipo CHECK (tipo IN ('cliente', 'admin', 'funcionario', 'tecnico'));
GO

-- Criação da tabela Endereco
IF OBJECT_ID('dbo.Endereco', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Endereco (
        idEndereco INT IDENTITY(1,1) PRIMARY KEY,
        apelido VARCHAR(100) NOT NULL,
        cep CHAR(8) NOT NULL,
        rua VARCHAR(100) NOT NULL,
        numero VARCHAR(10) NOT NULL,
        complemento VARCHAR(100),
        bairro VARCHAR(100) NOT NULL,
        cidade VARCHAR(100) NOT NULL,
        uf CHAR(2) NOT NULL,
        fkUsuario INT NOT NULL,
        FOREIGN KEY (fkUsuario) REFERENCES dbo.Usuario (id)
    );
END
GO

-- Criação da tabela Produto
IF OBJECT_ID('dbo.Produto', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Produto (
        idProduto INT IDENTITY(1,1) PRIMARY KEY,
        nome VARCHAR(100) NOT NULL,
        tamanho VARCHAR(4) NOT NULL,
        categoria VARCHAR(45) NOT NULL,
        marca VARCHAR(45) NOT NULL,
        preco DECIMAL(18, 2) NOT NULL,
        descricao VARCHAR(255) NOT NULL,
        qtdEstoque INT NOT NULL,
        status_produto VARCHAR(10) NOT NULL
            CHECK (status_produto IN ('Reservado', 'Disponível', 'Vendido'))
    );
END
GO

-- Criação da tabela Entrega
IF OBJECT_ID('dbo.Entrega', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Entrega (
        idEntrega INT IDENTITY(1,1) PRIMARY KEY,
        previstoPara DATE NOT NULL,
        status_entrega VARCHAR(45) NOT NULL,
        codigoRastreio VARCHAR(45) NOT NULL,
        dataHoraEnvio DATETIME NOT NULL,
        fkEndereco INT NOT NULL,
        FOREIGN KEY (fkEndereco) REFERENCES dbo.Endereco (idEndereco)
    );
END
GO

-- Criação da tabela Pedido
IF OBJECT_ID('dbo.Pedido', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Pedido (
        idPedido INT IDENTITY(1,1) PRIMARY KEY,
        dataHora DATETIME NOT NULL,
        tipoFrete VARCHAR(45) NOT NULL,
        valorFrete DECIMAL(18, 2) NOT NULL,
        valorTotal DECIMAL(18, 2) NOT NULL,
        status_pedido VARCHAR(45) NOT NULL,
        fkUsuario INT NOT NULL,
        fkEntrega INT NOT NULL,
        FOREIGN KEY (fkEntrega) REFERENCES dbo.Entrega (idEntrega),
        FOREIGN KEY (fkUsuario) REFERENCES dbo.Usuario (id)
    );
END
GO

-- Criação da tabela itemPedido
IF OBJECT_ID('dbo.itemPedido', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.itemPedido (
        id INT IDENTITY(1,1),
        fkPedido INT NOT NULL,
        fkProduto INT NOT NULL,
        quantidade INT NOT NULL,
        PRIMARY KEY (id, fkPedido, fkProduto),
        FOREIGN KEY (fkPedido) REFERENCES dbo.Pedido (idPedido),
        FOREIGN KEY (fkProduto) REFERENCES dbo.Produto (idProduto)
    );
END
GO

-- Criação da tabela Feedback
IF OBJECT_ID('dbo.Feedback', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Feedback (
        idFeedback INT IDENTITY(1,1) PRIMARY KEY,
        nota INT NOT NULL,
        comentario VARCHAR(255),
        fkUsuario INT NOT NULL,
        FOREIGN KEY (fkUsuario) REFERENCES dbo.Usuario (id)
    );
END
GO

-- Criação da tabela Imagem
IF OBJECT_ID('dbo.Imagem', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.Imagem (
        idImagem INT IDENTITY(1,1),
        imagem_url VARCHAR(500) NOT NULL,
        Produto_idProduto INT NOT NULL,
        PRIMARY KEY (idImagem, Produto_idProduto),
        FOREIGN KEY (Produto_idProduto) REFERENCES dbo.Produto (idProduto)
    );
END
GO